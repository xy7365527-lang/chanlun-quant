═══════════════════════════════════════════════════════════
  AI 代码审查已配置完成 - 现在需要设置 API 密钥
═══════════════════════════════════════════════════════════

✅ 代码已成功推送到 GitHub!

⚠️ 重要提示:还需要完成以下配置才能启用 AI 代码审查:

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
📋 必需步骤:在 GitHub 配置 OpenAI API Key
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

步骤 1: 获取 OpenAI API Key
────────────────────────────
1. 访问: https://platform.openai.com/api-keys
2. 登录或注册 OpenAI 账号
3. 点击 "Create new secret key"
4. 输入名称 (如: GitHub-CodeReview)
5. 复制生成的 API Key (以 sk- 开头)

💡 如果无法访问 OpenAI,可以使用国内代理服务:
   - API2D: https://api2d.com
   - OpenAI-SB: https://openai-sb.com


步骤 2: 在 GitHub 添加 Secret
──────────────────────────────
1. 打开仓库: https://github.com/xy7365527-lang/chanlun-quant

2. 点击顶部的 "Settings" (设置)

3. 在左侧菜单找到:
   Secrets and variables → Actions

4. 点击 "New repository secret" 按钮

5. 添加密钥:
   Name:  OPENAI_API_KEY
   Value: (粘贴你的 API Key)

6. 点击 "Add secret" 保存


步骤 3 (可选): 如果使用国内代理
──────────────────────────────────
再添加一个 Secret:
   Name:  OPENAI_API_BASE
   Value: https://你的代理地址/v1

例如: https://api.api2d.com/v1


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
🚀 使用方法
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

方式一:快速推送 (推荐新手使用)
────────────────────────────────
双击运行: git_push_with_review.bat

这个脚本会:
  ✓ 自动添加所有更改
  ✓ 引导你输入提交信息
  ✓ 推送到 GitHub
  ✓ 触发 AI 代码审查


方式二:创建 Pull Request (推荐重要功能)
───────────────────────────────────────
双击运行: git_create_pr.bat

这个脚本会:
  ✓ 创建新的功能分支
  ✓ 提交并推送更改
  ✓ 引导你在 GitHub 创建 PR
  ✓ AI 会在合并前审查代码


方式三:手动操作
───────────────
git add .
git commit -m "你的提交信息"
git push origin master


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
📊 查看 AI 审查结果
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Push 后查看:
  访问: https://github.com/xy7365527-lang/chanlun-quant/actions
  查看最新的工作流运行记录

Pull Request 中查看:
  AI 的审查意见会直接标注在代码行上


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
🤖 AI 审查重点 (专门为缠论量化系统定制)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

✓ 缠论算法逻辑 (笔、线段、中枢识别)
✓ 买卖点判断的准确性
✓ 交易策略的风险控制
✓ 仓位管理和资金管理
✓ Python 代码规范
✓ 性能优化建议
✓ 潜在的安全问题


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
💰 费用说明
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

OpenAI API 按使用量计费:
  • GPT-3.5-turbo: ~$0.002 / 1K tokens (便宜)
  • GPT-4:         ~$0.03  / 1K tokens (贵但更准确)

预估单次审查费用:
  • 小改动 (<100行):   $0.01 - $0.05
  • 中等改动 (100-500行): $0.05 - $0.20
  • 大改动 (>500行):    $0.20 - $1.00

💡 建议:
  - 在 OpenAI 后台设置月度使用限额
  - 日常使用 GPT-3.5,重要功能用 GPT-4


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
📚 完整文档
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

• 配置步骤:    AI_CODE_REVIEW_配置步骤.md
• 详细说明:    .github/README_AI_REVIEW.md
• 工作流配置:  .github/workflows/


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
❓ 常见问题
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Q: 工作流没有运行?
A: 检查 OPENAI_API_KEY 是否已正确配置在 GitHub Secrets

Q: API 调用失败?
A: 检查 API Key 是否有效,或尝试添加 OPENAI_API_BASE 使用代理

Q: 如何暂停 AI 审查?
A: 在提交信息中加 [skip ci],或在 GitHub Settings 禁用工作流


═══════════════════════════════════════════════════════════
配置完成后,每次推送代码都会自动触发 AI 审查! 🚀
═══════════════════════════════════════════════════════════

